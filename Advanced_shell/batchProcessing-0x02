#!/bin/bash

# File: batchProcessing-0x02
# Description: Fetch Pokémon data with error handling and retry logic.

# API URL
API_URL="https://pokeapi.co/api/v2/pokemon"

# List of Pokémon
POKEMON_LIST=("Bulbasaur" "Ivysaur" "Venusaur" "Charmander" "Charmeleon")

# Directory to save JSON files
OUTPUT_DIR="./pokemon_data"

# Ensure the output directory exists
mkdir -p "$OUTPUT_DIR"

# Clear previous error log
> error_log.txt

# Function to retrieve Pokémon data
fetch_pokemon_data() {
  local pokemon_name="$1"
  local retries=0
  local max_retries=3

  while [[ $retries -lt $max_retries ]]; do
    echo "Fetching data for $pokemon_name (Attempt $((retries + 1))/$max_retries)..."
    response=$(curl -s -w "%{http_code}" -o "$OUTPUT_DIR/${pokemon_name,,}.json" "$API_URL/${pokemon_name,,}")
    status_code=${response: -3}

    if [[ $status_code -eq 200 ]]; then
      echo "Data for $pokemon_name saved successfully."
      return 0
    else
      echo "Error fetching $pokemon_name: HTTP $status_code. Retrying..."
      retries=$((retries + 1))
      sleep 2  # Delay before retry
    fi
  done

  echo "Failed to fetch data for $pokemon_name after $max_retries attempts. Logging error."
  echo "$pokemon_name" >> error_log.txt
  return 1
}

# Loop through each Pokémon
for pokemon in "${POKEMON_LIST[@]}"; do
  fetch_pokemon_data "$pokemon"
done

# Completion message
echo "Processing completed. Errors logged to error_log.txt if any."
